# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export NVM_DIR=~/.nvm
export ZSH=/Users/abhishek/.oh-my-zsh
export PATH=$PATH:/Users/abhishek/bin
export GOPATH=/Users/abhishek/PetProjectMaga/GoLang/
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home
# Se tname of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Adding another custome file
source $HOME/.api_collections


# Custome Navigations Settings
#alias dexec="docker exec -it $1 $2"
alias dstart="docker start $1"
alias dstop="docker stop $1"
alias dv1bash="docker exec -it $V1 bash"
alias dv1start="docker start $V1"
alias dv1stop="docker stop $V1"
alias dv2bash="docker exec -it $V2 bash"
alias dv2start="docker start $V2"
alias dv2stop="docker stop $V2"
alias dtest="echo $V1"
alias gg="git grep -ni"
alias gcp="git commit -m $1 && git push"
#alias dcrm="docker rm $(docker ps -a -f status=exited | awk '{if (NR!=1) print $1;}')"
#alias dps="docker ps | awk -F'[[:space:]][[:space:]][[:space:]]*' '{print $1  $7}'"

seelines() {
    #to see lines between the specified number of lines
    # from line in $1 $2 to line
    awk 'FNR>=$1 && FNR<=$2' $3
}

dockerps() {
    if [[ "$1" ]]; then
        docker ps | grep $1
    else
        docker ps
    fi
}


docker_exec() {
    if [[ "$1" = "a" ]]; then
        DOCK_PATH=/home/a/manage.py
        ENV=$1
    else
        DOCK_PATH=/rest/a/manage.py
        ENV=abhis_v2_wsgi_1
    fi

    print $DOCK_PATH
    if [[ "$2" = "log" ]]; then
        docker exec -it $ENV tailf /home/logs/debug.log
    elif [[ "$2" = "shell" ]]; then
        docker exec -it $ENV python $DOCK_PATH shell
    elif [[ "$2" = "db" ]]; then
        docker exec -it $ENV python $DOCK_PATH dbshell
    elif [[ "$2" = "serv" ]]; then
        docker exec -it $ENV python $DOCK_PATH runserver 0.0.0.0:8083
    elif [[ "$2" = "re" ]]; then
        docker-compose restart backend
    elif [[ "$2" = "makemigrations" ]]; then
        docker exec -it $ENV python $DOCK_PATH makemigrations $3
    elif [[ "$2" = "migrate" ]]; then
        if [[ "$4" = "fake" ]]; then
            docker exec -it $ENV python $DOCK_PATH migrate $3 --fake
        else
            docker exec -it $ENV python $DOCK_PATH migrate $3
        fi
    else
        docker exec -it $ENV $2
    fi
}


alias xclip="xclip -selection c"
ssh_alias() {
    echo -n Password:
    read -s password
    echo ""
    echo ""
    if [[ "$password" = "xxxxxx" ]]; then
        cd ~/pem_key
        if [[ "$1" = "dev" ]]; then
            #python3.5 ~/aws/aws-cli-instance-desc.py | grep dev
            echo '--------------------------------------------'
            ssh -A -i abhishek.pem abhishek@xx.xxx.xxx.xx -p xxxx
        elif [[ "$1" = "uat" ]]; then
            #python3.5 ~/aws/aws-cli-instance-desc.py | grep uat
            echo '----------------------------------------------'
            ssh -A -i abhishek.pem abhishek@xx.xxx.xxx.xx -p xxxx
        elif [[ "$1" = "prep" ]]; then
            #python3.5 ~/aws/aws-cli-instance-desc.py | grep prep
            echo '----------------------------------------------'
            ssh -A -i abhishek.pem abhishek@xx.xxx.xxx.xx -p xxxx
        elif [[ "$1" = "prod" ]]; then
            #python3.5 ~/aws/aws-cli-instance-desc.py prod | grep prd
            aws ec2 describe-instances --filter "Name=tag:Name,Values=prd-*" --query "Reservations[*].Instances[*].{name: Tags[?Key=='Name'] | [0].Value, instance_id: InstanceId, ip_address: PrivateIpAddress, state: State.Name, launch_time: LaunchTime}"  --output table 
            echo "sudo docker exec -it \$(sudo docker ps | grep prd | awk '{print \$1}') bash" | pbcopy 
            ssh -A -i abhishek.pem abhishek@xx.xxx.xxx.x -p xxx
        else
            echo "Unkown Server to ssh"
        fi
        cd -
    else
        echo "Invalid Password"
    fi
}

NAME_KEY="'Name'"
alias prdec2='aws ec2 describe-instances --filter "Name=tag:Name,Values=prd-*" --query "Reservations[*].Instances[*].{name: Tags[?Key=='$NAME_KEY'] | [0].Value, instance_id: InstanceId, ip_address: PrivateIpAddress, state: State.Name}"  --output table'

ggb() { git grep -n "$1" | while IFS=: read i j k; do git blame -L $j,$j $i | cat | sed 's|^|'$i':\t|'; done; }




# Git short cuts
alias pull="git pull origin $(git_current_branch)"
alias push="git push origin $(git_current_branch)"
alias gf="git fetch origin $1"
alias gfc="git fetch origin $1 && git checkout $1"
alias ck="git checkout $1"
alias diff="git diff $1"
alias gs="git status"
alias st="git stash"
alias br="git branch"
alias ga="git add"
alias wb="git_current_branch"
alias pop="git stash pop"
alias ap="git stash list"
alias gl="git log --oneline"
alias gcm="git commit --amend"


alias dps=dockerps
alias cline=seelines
#alias de=docker_exec
alias dexec=docker_exec
alias go2=ssh_alias
alias matrix="cd /Users/abhishek/PetProjectMaga/GoLang/src/matrix"
alias jmeter="open /usr/local/bin/jmeter"
alias gb=ggb
alias de="docker exec -it $1 bash"
alias dc="docker-compose -f $1 $2"

#Node
#source $(brew --prefix nvm)/nvm.sh

#help commands to user when need
alias help-psql="""echo psql --host=$DB_HOST --username=$DB_USER --port=5432 --dbname=$DB_NAME --password """

#TERAFORM PATH DIR
export PATH=$PATH:/Users/abhishek/PetProjectMaga/teraform
